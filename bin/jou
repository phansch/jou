#!/usr/bin/env ruby

require_relative '../lib/jou'
require_relative '../lib/journal_config.rb'
require 'optparse'

module JournalCli
  @options = {}

  def self.parse

    # Set default values for cli options
    @options[:file] = JournalConfig.config[:journal_file]

    # Parse cli options
    OptionParser.new do |opts|
      opts.banner = "Usage: jou [options]"

      opts.on("-a string", String, "Add an entry") do |entry|
        @options[:add] = entry
      end
      opts.on("-s", "--set-journal path/to/file", String, "Set a new default file to write to and read from") do |file|
        @options[:file] = file
      end
      opts.on_tail("-h", "--help", "--usage", "Show this message") do |setting|
        puts opts.help
        exit
      end
    end.parse!

    if @options[:file] != JournalConfig.config[:journal_file]
      # Set a new journal file
      config_file = Dir.home + "/.jou"
      JournalConfig.config[:journal_file] = @options[:file] if @options[:file]
      JournalConfig.create(config_file)
    elsif @options[:add]
      j = Journal.new(JournalConfig.config[:journal_file])

      # Get current content if the file exists
      j.serialize if File.exist?(JournalConfig.config[:journal_file])

      j.add(options[:add]) # Add a new journal entry
      puts "Adding entry to journal: #{options[:add]}"

      # Sort and save
      j.reverse_sort
      j.deserialize
    end
  end
end

JournalCli.parse